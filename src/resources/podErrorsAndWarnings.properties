0=E|empty =headn|A heading (C<=head1> or C<=head2>) without any text? That ain't no heading!
1=E|=over on line I<N> without closing =back|The C<=over> command does not have a corresponding C<=back> before the next heading (C<=head1> or C<=head2>) or the end of the file.
2=E|=item without previous =over|An C<=item> or C<=back> command has been found outside a C<=over>/C<=back> block.
3=E|=back without previous =over|An C<=item> or C<=back> command has been found outside a C<=over>/C<=back> block.
4=E|No argument for =begin|A C<=begin> command was found that is not followed by the formatter specification.
5=E|=end without =begin|A standalone C<=end> command was found.
6=E|Nested =begin's|There were at least two consecutive C<=begin> commands without the corresponding C<=end>. Only one C<=begin> may be active at a time.
7=E|=for without formatter specification|There is no specification of the formatter after the C<=for> command.
8=E|Apparent command =foo not preceded by blank line|A command which has ended up in the middle of a paragraph or other command, such as
9=E|unresolved internal link I<NAME>|The given link to I<NAME> does not have a matching node in the current POD. This also happened when a single word node name is not enclosed in C<"">.
10=E|Unknown command "I<CMD>"|An invalid POD command has been found. Valid are C<=head1>, C<=head2>, C<=head3>, C<=head4>, C<=over>, C<=item>, C<=back>, C<=begin>, C<=end>, C<=for>, C<=pod>, C<=cut>
11=E|Unknown interior-sequence "I<SEQ>"|An invalid markup command has been encountered. Valid are: C<< BE<lt>E<gt> >>, C<< CE<lt>E<gt> >>, C<< EE<lt>E<gt> >>, C<< FE<lt>E<gt> >>, C<< IE<lt>E<gt> >>, C<< LE<lt>E<gt> >>, C<< SE<lt>E<gt> >>, C<< XE<lt>E<gt> >>, C<< ZE<lt>E<gt> >>
12=E|nested commands I<CMD>E<lt>...I<CMD>E<lt>...E<gt>...E<gt>|Two nested identical markup commands have been found. Generally this does not make sense.
13=E|garbled entity I<STRING>|The I<STRING> found cannot be interpreted as a character entity.
14=E|Entity number out of range|An entity specified by number (dec, hex, oct) is out of range (1-255).
15=E|malformed link LE<lt>E<gt>|The link found cannot be parsed because it does not conform to the syntax described in L<perlpod>.
16=E|nonempty ZE<lt>E<gt>|The C<< ZE<lt>E<gt> >> sequence is supposed to be empty.
17=E|empty XE<lt>E<gt>|The index entry specified contains nothing but whitespace.
18=E|Spurious text after =pod / =cut|The commands C<=pod> and C<=cut> do not take any arguments.
19=E|Spurious =cut command|A C<=cut> command was found without a preceding POD paragraph.
20=E|Spurious =pod command|A C<=pod> command was found after a preceding POD paragraph.
21=E|Spurious character.s. after =back|The C<=back> command does not take any arguments.
22=W|multiple occurrence of link target I<name>|The POD file has some C<=item> and/or C<=head> commands that have the same text. Potential hyperlinks to such a text cannot be unique then. This warning is printed only with warning level greater than one.
23=W|line containing nothing but whitespace in paragraph|There is some whitespace on a seemingly empty line. POD is very sensitive to such things, so this is flagged. B<vi> users switch on the B<list> option to avoid this problem.
24=W|previous =item has no contents|There is a list C<=item> right above the flagged line that has no text contents. You probably want to delete empty items.
25=W|preceding non-item paragraph.s.|A list introduced by C<=over> starts with a text or verbatim paragraph, but continues with C<=item>s. Move the non-item paragraph out of the C<=over>/C<=back> block.
26=W|=item type mismatch .I<one> vs. I<two>.|A list started with e.g. a bullet-like C<=item> and continued with a numbered one. This is obviously inconsistent. For most translators the type of the I<first> C<=item> determines the type of the list.
27=W|I<N> unescaped C<< E<lt>E<gt> >> in paragraph|Angle brackets not written as C<< E<lt>ltE<gt> >> and C<< E<lt>gtE<gt> >> can potentially cause errors as they could be misinterpreted as markup commands. This is only printed when the -warnings level is greater than 1.
28=W|Unknown entity|A character entity was found that does not belong to the standard ISO set or the POD specials C<verbar> and C<sol>.
29=W|No items in =over|The list opened with C<=over> does not contain any items.
30=W|No argument for =item|C<=item> without any parameters is deprecated. It should either be followed by C<*> to indicate an unordered list, by a number (optionally followed by a dot) to indicate an ordered (numbered) list or simple text for a definition list.
31=W|empty section in previous paragraph|The previous section (introduced by a C<=head> command) does not contain any text. This usually indicates that something is missing. Note: A C<=head1> followed immediately by C<=head2> does not trigger this warning.
32=W|Verbatim paragraph in NAME section|The NAME section (C<=head1 NAME>) should consist of a single paragraph with the script/module name, followed by a dash `-' and a very short description of what the thing is good for.
33=W|=headI<n> without preceding higher level|For example if there is a C<=head2> in the POD file prior to a C<=head1>.
34=H|ignoring leading/trailing whitespace in link|There is whitespace at the beginning or the end of the contents of LE<lt>...E<gt>.
35=H|.section. in '.page' deprecated|There is a section detected in the page name of LE<lt>...E<gt>, e.g. C<< LE<lt>passwd(2)E<gt> >>. POD hyperlinks may point to POD documents only. Please write C<< CE<lt>passwd(2)E<gt> >> instead. Some formatters are able to expand this to appropriate code. For links to (builtin) functions, please say C<< LE<lt>perlfunc/mkdirE<gt> >>, without ().
36=H|alternative text/node '.*?' contains non-escaped . or /|The characters C<|> and C</> are special in the LE<lt>...E<gt> context. Although the hyperlink parser does its best to determine which "/" is text and which is a delimiter in case of doubt, one ought to escape these literal characters like this:
